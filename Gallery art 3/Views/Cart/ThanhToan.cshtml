@*@model List<Gallery_art_3.Models.CartItem>*@
@model Gallery_art_3.Models.order_buy
@{

    ViewBag.Title = "Thanh Toan";
}

<h2>@ViewBag.Title</h2>




@*<div class="content">
    <div class="section group">
        @if (Model.giohang.Count > 0)
        {
            <div class="row">
                <div class="col-sm-12">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <tr>
                                <th>Hình</th>
                                <th>Tên sản phẩm</th>
                                <th>Số lượng</th>
                                <th>Đơn giá</th>

                                <th></th>
                            </tr>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="text-center"><img src="~/@item.Hinh" width="70" height="60" /> </td>
                                    <td><a target="_blank" href="@Url.Action("Details", "artworks", new { id = item.SanPhamID })"> @item.TenSanPham </a> </td>
                                    <td>
                                        1
                                    </td>
                                    <td> @item.DonGia.ToString("#,##0").Replace(',', '.') USD </td>


                                    <td> <a href="@Url.Action("XoaKhoiGio",new { SanPhamID = item.SanPhamID})" onclick="return confirm('Bạn có chắc muốn xóa sản phẩm này?');" class="btn btn-danger btn-sm">Xóa</a> </td>
                                </tr>
                            }
                            <tr>
                                <td></td>
                                <td class="text-right">Tổng số lượng:</td>
                                <td> @Model.giohang.Sum(m => m.SoLuong) </td>
                                <td class="text-right">Tổng thành tiền:</td>
                                <td>@Model.giohang.Sum(m => m.ThanhTien).ToString("#,##0").Replace(',', '.') USD </td>
                            </tr>
                        </table>
                    </div>
                </div>

            </div>
        }

    </div>*@
    @Html.ActionLink("Back to Cart", "Index")
    <div class="section group">

        @*<div class="col-md-6">*@
        @using (Html.BeginForm("ThanhToan", "Cart", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @*<div class="form-group">
                <label>Người nhận</label>
                <input name="name" class="form-control" />
            </div>
            <div class="form-group">
                <label>Điện thoại</label>
                <input name="phone" class="form-control" />
            </div>
            <div class="form-group">
                <label>Địa chỉ</label>
                <input name="address" class="form-control" />
            </div>

            <div class="form-group">
                <label>Country Code</label>
                <input name="country" class="form-control" />
            </div>
            <div class="form-group">
                <label>Zip Code</label>
                <input name="zipcode" class="form-control" />
            </div>
            <div class="form-group">
                <label>City</label>
                <input name="city" class="form-control" />
            </div>
            <input hidden value="@Model.Sum(s=>s.ThanhTien)" name="total" />

            <div>
                @Html.DropDownList("Payment", null, htmlAttributes: new { @class = "form-control" })
            </div>*@

            <div class="form-horizontal">
                <h4>artwork</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Recipient, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Recipient, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Recipient, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country_code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Country_code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country_code, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Zip_code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Zip_code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Zip_code, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Total ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <input disabled value="@Session["total"]" name="Total_price" />
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Payment_id, "Payment method", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Payment_id", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Payment_id, "", new { @class = "text-danger" })
                    </div>
                </div>



            <button type="submit" class="btn">Gửi đơn hàng</button>

            </div>
        }
    </div>
@*</div>*@
